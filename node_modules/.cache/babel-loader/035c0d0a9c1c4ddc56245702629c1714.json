{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/react-project/src/components/List.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react/cjs/react.development\";\nimport \"../App.css\";\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const {\n    notesArray,\n    setNotesArray,\n    setModalIsOpen,\n    modalIsOpen\n  } = props;\n\n  const handleDelete = e => {\n    let r = window.confirm(\"Are you sure you want to delete your note?\");\n\n    if (r == true) {\n      const newArray = notesArray.filter(item => {\n        return item.id !== e.target.value;\n      });\n      setNotesArray(newArray);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: notesArray.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setModalIsOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.createdDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.titleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.noteInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: item.id,\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), isEditing === item.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Your note...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, item.dateInput + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n\n      /*#__PURE__*/\n      _jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onRequestClose: () => setModalIsOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item.titleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.noteInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setModalIsOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/react-project/src/components/List.js"],"names":["useState","Modal","List","props","isEditing","setIsEditing","notesArray","setNotesArray","setModalIsOpen","modalIsOpen","handleDelete","e","r","window","confirm","newArray","filter","item","id","target","value","map","index","createdDate","titleInput","noteInput","dateInput"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,6BAAzB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,cAA7B;AAA6CC,IAAAA;AAA7C,MAA6DN,KAAnE;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAE1B,QAAIC,CAAC,GAAGC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAR;;AAEA,QAAIF,CAAC,IAAI,IAAT,EAAe;AACb,YAAMG,QAAQ,GAAGT,UAAU,CAACU,MAAX,CAAmBC,IAAD,IAAU;AAC3C,eAAOA,IAAI,CAACC,EAAL,KAAYP,CAAC,CAACQ,MAAF,CAASC,KAA5B;AACD,OAFgB,CAAjB;AAGAb,MAAAA,aAAa,CAACQ,QAAD,CAAb;AACD;AACF,GAVD;;AAaA,sBACE;AAAA,cAEGT,UAAU,CAACe,GAAX,CAAe,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AAC/B,0BACE;AAAkC,QAAA,OAAO,EAAE,MAAMd,cAAc,CAAC,IAAD,CAA/D;AAAA,gCACG;AAAA,oBAAMS,IAAI,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAA,oBAAMN,IAAI,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAA,oBAAMP,IAAI,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,gBAHH,eAKE;AAAA,iCACE;AAAQ,YAAA,KAAK,EAAER,IAAI,CAACC,EAApB;AAAwB,YAAA,OAAO,EAAER,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,EAcGN,SAAS,KAAKa,IAAI,CAACC,EAAnB,iBACC;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA,SAAUD,IAAI,CAACS,SAAL,GAAiBJ,KAA3B;AAAA;AAAA;AAAA;AAAA,cADF;;AAyBA;AAAA,cAAC,KAAD;AAAO,QAAA,MAAM,EAAEb,WAAf;AAA4B,QAAA,cAAc,EAAE,MAAMD,cAAc,CAAC,KAAD,CAAhE;AAAA,gCACA;AAAA,oBAAKS,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oBAAIP,IAAI,CAACQ;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAE,MAAMjB,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD,KAjCA;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GAzDQN,I;;KAAAA,I;AA2DT,eAAeA,IAAf","sourcesContent":["import { useState } from \"react/cjs/react.development\";\nimport \"../App.css\";\nimport Modal from 'react-modal';\n\n\nfunction List(props) {\n  const [isEditing, setIsEditing] = useState(false);\n  const { notesArray, setNotesArray, setModalIsOpen, modalIsOpen } = props;\n\n  const handleDelete = (e) => {\n\n    let r = window.confirm(\"Are you sure you want to delete your note?\");\n\n    if (r == true) {\n      const newArray = notesArray.filter((item) => {\n        return item.id !== e.target.value;\n      });\n      setNotesArray(newArray);\n    }\n  };\n\n\n  return (\n    <div>\n      {/* List */}\n      {notesArray.map((item, index) => {\n        return (\n          <div key={item.dateInput + index} onClick={() => setModalIsOpen(true)}>\n            {<div>{item.createdDate}</div>}\n            {<div>{item.titleInput}</div>}\n            {<div>{item.noteInput}</div>}\n           \n            <div>\n              <button value={item.id} onClick={handleDelete}>\n                Delete\n              </button>\n              {/* EDIT BUTTON */}\n              {/* <button value={item.id} onClick={handleEdit}>\n                Edit\n              </button> */}\n            </div>\n            {isEditing === item.id && (\n              <div>\n                <input type=\"text\" placeholder=\"Title\" />\n                <input type=\"text\" placeholder=\"Your note...\" />\n              </div>\n\n            )}\n          </div>\n        );\n\n        <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n        <h2>{item.titleInput}</h2>\n        <p>{item.noteInput}</p>\n        <div>\n          <button onClick={() => setModalIsOpen(false)}>Close</button>\n        </div>\n      </Modal>\n      })}\n      \n    </div>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}