{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/react-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, React } from \"react\";\nimport Modal from \"react-modal\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\n\nfunction App() {\n  _s();\n\n  const [titleInput, setTitleInput] = useState();\n  const [noteInput, setNoteInput] = useState();\n  const [formData, setFormData] = useState();\n  const [notesArray, setNotesArray] = useState([]);\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [idSelected, setIdSelected] = useState();\n  useEffect(() => {\n    if (formData && formData[\"noteInput\"]) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n  useEffect(() => {\n    const newFormData = {\n      titleInput: titleInput,\n      noteInput: noteInput\n    };\n    setFormData(newFormData);\n  }, [titleInput, noteInput]);\n  useEffect(() => {\n    console.log(idSelected);\n  }, [idSelected]);\n  useEffect(() => {\n    if (notesArray) {\n      console.log(notesArray);\n    }\n  }, [notesArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      titleInput: titleInput,\n      setTitleInput: setTitleInput,\n      setNotesArray: setNotesArray,\n      noteInput: noteInput,\n      setNoteInput: setNoteInput,\n      formData: formData,\n      setFormData: setFormData,\n      isFormComplete: isFormComplete,\n      parent: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      notesArray: notesArray,\n      setNotesArray: setNotesArray,\n      setModalIsOpen: setModalIsOpen,\n      modalIsOpen: modalIsOpen,\n      idSelected: idSelected,\n      setIdSelected: setIdSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: notesArray.map((item, index) => {\n        if (item.id === idSelected) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              titleInput: titleInput,\n              setTitleInput: setTitleInput,\n              setNotesArray: setNotesArray,\n              noteInput: noteInput,\n              setNoteInput: setNoteInput,\n              formData: formData,\n              setFormData: setFormData,\n              isFormComplete: isFormComplete,\n              parent: \"ModalList\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.titleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.noteInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setModalIsOpen(false),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OiRSgOZJfZSLyk/v+TNU/x822EE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/react-project/src/App.js"],"names":["useEffect","useState","React","Modal","List","Form","setAppElement","App","titleInput","setTitleInput","noteInput","setNoteInput","formData","setFormData","notesArray","setNotesArray","isFormComplete","setIsFormComplete","modalIsOpen","setModalIsOpen","idSelected","setIdSelected","newFormData","console","log","map","item","index","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,KAA9B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;;AAEAF,KAAK,CAACG,aAAN,CAAoB,OAApB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,EAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,QAAQ,IAAIA,QAAQ,CAAC,WAAD,CAAxB,EAAuC;AACrCK,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,KAFD,MAEO;AACLA,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,GANQ,EAMN,CAACL,QAAD,CANM,CAAT;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,WAAW,GAAG;AAClBd,MAAAA,UAAU,EAAEA,UADM;AAElBE,MAAAA,SAAS,EAAEA;AAFO,KAApB;AAKAG,IAAAA,WAAW,CAACS,WAAD,CAAX;AACD,GAPQ,EAON,CAACd,UAAD,EAAaE,SAAb,CAPM,CAAT;AASAV,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,UAAJ,EAAgB;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACD;AACF,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,UAAU,EAAEN,UADd;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,aAAa,EAAEM,aAHjB;AAIE,MAAA,SAAS,EAAEL,SAJb;AAKE,MAAA,YAAY,EAAEC,YALhB;AAME,MAAA,QAAQ,EAAEC,QANZ;AAOE,MAAA,WAAW,EAAEC,WAPf;AAQE,MAAA,cAAc,EAAEG,cARlB;AASE,MAAA,MAAM,EAAC;AATT;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,IAAD;AACE,MAAA,UAAU,EAAEF,UADd;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,cAAc,EAAEI,cAHlB;AAIE,MAAA,WAAW,EAAED,WAJf;AAKE,MAAA,UAAU,EAAEE,UALd;AAME,MAAA,aAAa,EAAEC;AANjB;AAAA;AAAA;AAAA;AAAA,YAZF,eAqBE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEH,WAAf;AAA4B,MAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAAhE;AAAA,gBACGL,UAAU,CAACW,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,YAAID,IAAI,CAACE,EAAL,KAAYR,UAAhB,EAA4B;AAC1B,8BACE;AAAA,oCACE,QAAC,IAAD;AACE,cAAA,UAAU,EAAEZ,UADd;AAEE,cAAA,aAAa,EAAEC,aAFjB;AAGE,cAAA,aAAa,EAAEM,aAHjB;AAIE,cAAA,SAAS,EAAEL,SAJb;AAKE,cAAA,YAAY,EAAEC,YALhB;AAME,cAAA,QAAQ,EAAEC,QANZ;AAOE,cAAA,WAAW,EAAEC,WAPf;AAQE,cAAA,cAAc,EAAEG,cARlB;AASE,cAAA,MAAM,EAAC;AATT;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE;AAAA,wBAAKU,IAAI,CAAClB;AAAV;AAAA;AAAA;AAAA;AAAA,oBAZF,eAaE;AAAA,wBAAIkB,IAAI,CAAChB;AAAT;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE;AAAA,qCACE;AAAQ,gBAAA,OAAO,EAAE,MAAMS,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAoBD;AACF,OAvBA;AADH;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GArFQZ,G;;KAAAA,G;AAuFT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState, React } from \"react\";\nimport Modal from \"react-modal\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\n\nModal.setAppElement(\"#root\");\n\nfunction App() {\n  const [titleInput, setTitleInput] = useState();\n  const [noteInput, setNoteInput] = useState();\n  const [formData, setFormData] = useState();\n  const [notesArray, setNotesArray] = useState([]);\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [idSelected, setIdSelected] = useState();\n\n  useEffect(() => {\n    if (formData && formData[\"noteInput\"]) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    const newFormData = {\n      titleInput: titleInput,\n      noteInput: noteInput,\n    };\n\n    setFormData(newFormData);\n  }, [titleInput, noteInput]);\n\n  useEffect(() => {\n    console.log(idSelected);\n  }, [idSelected]);\n\n  useEffect(() => {\n    if (notesArray) {\n      console.log(notesArray);\n    }\n  }, [notesArray]);\n  return (\n    <div className=\"App\">\n      <Form\n        titleInput={titleInput}\n        setTitleInput={setTitleInput}\n        setNotesArray={setNotesArray}\n        noteInput={noteInput}\n        setNoteInput={setNoteInput}\n        formData={formData}\n        setFormData={setFormData}\n        isFormComplete={isFormComplete}\n        parent=\"App\"\n      />\n      <List\n        notesArray={notesArray}\n        setNotesArray={setNotesArray}\n        setModalIsOpen={setModalIsOpen}\n        modalIsOpen={modalIsOpen}\n        idSelected={idSelected}\n        setIdSelected={setIdSelected}\n      />\n      {/* <button onClick={() => setModalIsOpen(true)}>Open Modal</button> */}\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n        {notesArray.map((item, index) => {\n          if (item.id === idSelected) {\n            return (\n              <div>\n                <Form\n                  titleInput={titleInput}\n                  setTitleInput={setTitleInput}\n                  setNotesArray={setNotesArray}\n                  noteInput={noteInput}\n                  setNoteInput={setNoteInput}\n                  formData={formData}\n                  setFormData={setFormData}\n                  isFormComplete={isFormComplete}\n                  parent=\"ModalList\"\n                />\n                <h2>{item.titleInput}</h2>\n                <p>{item.noteInput}</p>\n                <div>\n                  <button onClick={() => setModalIsOpen(false)}>Close</button>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}