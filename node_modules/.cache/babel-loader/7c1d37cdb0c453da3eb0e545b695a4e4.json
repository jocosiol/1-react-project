{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/react-project/src/components/List.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react/cjs/react.development\";\nimport \"../App.css\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const {\n    notesArray,\n    setNotesArray,\n    setModalIsOpen,\n    modalIsOpen,\n    idSelected,\n    setIdSelected\n  } = props;\n\n  const handleDelete = e => {\n    let r = window.confirm(\"Are you sure you want to delete your note?\");\n\n    if (r === true) {\n      const newArray = notesArray.filter(item => {\n        return item.id !== e.target.value;\n      });\n      setNotesArray(newArray);\n      setModalIsOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: notesArray.map((item, index) => {\n      function handleListClick() {\n        setIdSelected(item.id);\n        setModalIsOpen(true);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleListClick(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.createdDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.titleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.noteInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 14\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: item.id,\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), isEditing === item.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Your note...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/react-project/src/components/List.js"],"names":["useState","Modal","List","props","isEditing","setIsEditing","notesArray","setNotesArray","setModalIsOpen","modalIsOpen","idSelected","setIdSelected","handleDelete","e","r","window","confirm","newArray","filter","item","id","target","value","map","index","handleListClick","createdDate","titleInput","noteInput"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,6BAAzB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AACJM,IAAAA,UADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA;AANI,MAOFR,KAPJ;;AASA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIC,CAAC,GAAGC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAR;;AAEA,QAAIF,CAAC,KAAK,IAAV,EAAgB;AACd,YAAMG,QAAQ,GAAGX,UAAU,CAACY,MAAX,CAAmBC,IAAD,IAAU;AAC3C,eAAOA,IAAI,CAACC,EAAL,KAAYP,CAAC,CAACQ,MAAF,CAASC,KAA5B;AACD,OAFgB,CAAjB;AAGAf,MAAAA,aAAa,CAACU,QAAD,CAAb;AACAT,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAVD;;AAYA,sBACE;AAAA,cAEGF,UAAU,CAACiB,GAAX,CAAe,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AAC/B,eAASC,eAAT,GAA2B;AACzBd,QAAAA,aAAa,CAACQ,IAAI,CAACC,EAAN,CAAb;AACAZ,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAED,0BACE;AAAA,gCACI;AAAmB,UAAA,OAAO,EAAE,MAAMiB,eAAe,EAAjD;AAAA,kCACD;AAAA,sBAAMN,IAAI,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,kBADC,eAED;AAAA,sBAAMP,IAAI,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFC,eAGD;AAAA,sBAAMR,IAAI,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHC;AAAA,WAAUT,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAME;AAAA,iCACE;AAAQ,YAAA,KAAK,EAAED,IAAI,CAACC,EAApB;AAAwB,YAAA,OAAO,EAAER,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,EAeGR,SAAS,KAAKe,IAAI,CAACC,EAAnB,iBACC;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAwBD,KA9BA;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA3DQlB,I;;KAAAA,I;AA6DT,eAAeA,IAAf","sourcesContent":["import { useState } from \"react/cjs/react.development\";\nimport \"../App.css\";\nimport Modal from \"react-modal\";\n\nfunction List(props) {\n  const [isEditing, setIsEditing] = useState(false);\n  const {\n    notesArray,\n    setNotesArray,\n    setModalIsOpen,\n    modalIsOpen,\n    idSelected,\n    setIdSelected,\n  } = props;\n\n  const handleDelete = (e) => {\n    let r = window.confirm(\"Are you sure you want to delete your note?\");\n\n    if (r === true) {\n      const newArray = notesArray.filter((item) => {\n        return item.id !== e.target.value;\n      });\n      setNotesArray(newArray);\n      setModalIsOpen(false);\n    }\n  };\n\n  return (\n    <div>\n      {/* List */}\n      {notesArray.map((item, index) => {\n        function handleListClick() {\n          setIdSelected(item.id);\n          setModalIsOpen(true);\n        }\n\n        return (\n          <div >\n              <div key={item.id} onClick={() => handleListClick()} >\n            {<div>{item.createdDate}</div>}\n            {<div>{item.titleInput}</div>}\n            {<div>{item.noteInput}</div>}\n            </div>\n            <div>\n              <button value={item.id} onClick={handleDelete}>\n                Delete\n              </button>\n              {/* EDIT BUTTON */}\n              {/* <button value={item.id} onClick={handleEdit}>\n                Edit\n              </button> */}\n            </div>\n            {isEditing === item.id && (\n              <div>\n                <input type=\"text\" placeholder=\"Title\" />\n                <input type=\"text\" placeholder=\"Your note...\" />\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}