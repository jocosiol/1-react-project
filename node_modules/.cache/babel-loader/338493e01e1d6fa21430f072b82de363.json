{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/react-project/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport \"../App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { compareAsc, format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const {\n    titleInput,\n    setTitleInput,\n    notesArray,\n    setNotesArray,\n    noteInput,\n    setNoteInput,\n    formData,\n    setFormData,\n    isFormComplete,\n    idSelected,\n    setModalIsOpen,\n    parent\n  } = props;\n  const [selectedTitle, setElectedTitle] = useState();\n  const [selectedNote, setElectedNote] = useState();\n\n  const handleChangeTitle = e => {\n    setTitleInput(e.target.value);\n\n    if (parent === \"ModalList\") {\n      setElectedTitle(e.target.value);\n    }\n  };\n\n  const handleChangeNote = e => {\n    setNoteInput(e.target.value);\n\n    if (parent === \"ModalList\") {\n      setElectedNote(e.target.value);\n    }\n  };\n\n  const handleSubmit = () => {\n    const finalData = formData;\n    finalData[\"createdDate\"] = format(new Date(), \"dd-MM-yyyy HH:mm\");\n\n    if (parent === \"App\") {\n      finalData[\"id\"] = uuidv4();\n    }\n\n    if (parent === \"List\") {\n      finalData[\"id\"] = formData[\"id\"];\n    }\n\n    if (parent === \"ModalList\") {\n      // I have to loop to \n      finalData[\"id\"] = uuidv4();\n      finalData[\"createdDate\"] = format(new Date(), \"dd-MM-yyyy HH:mm\");\n      finalData[\"titleInput\"] = selectedTitle;\n      finalData[\"noteInput\"] = selectedNote;\n      setModalIsOpen(false);\n    }\n\n    setNotesArray(prevState => {\n      return [finalData, ...prevState];\n    });\n    setTitleInput(\"\");\n    setNoteInput(\"\");\n    setFormData({});\n  };\n\n  if (parent == \"App\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChangeTitle,\n        type: \"text\",\n        placeholder: \"Title\",\n        value: titleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleChangeNote,\n        type: \"text\",\n        placeholder: \"Your note...\",\n        value: noteInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isFormComplete,\n        className: `submit-button-${!isFormComplete}`,\n        onClick: handleSubmit,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  } else if (parent == \"ModalList\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notesArray.map(item => {\n        if (item.id === idSelected) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChangeTitle,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: handleChangeNote,\n              children: item.noteInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !isFormComplete,\n              className: `submit-button-${!isFormComplete}`,\n              onClick: handleSubmit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Form, \"L//ic3DHs9UOjPJIO99g6FbCCr4=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/react-project/src/components/Form.js"],"names":["useState","useEffect","v4","uuidv4","compareAsc","format","Form","props","titleInput","setTitleInput","notesArray","setNotesArray","noteInput","setNoteInput","formData","setFormData","isFormComplete","idSelected","setModalIsOpen","parent","selectedTitle","setElectedTitle","selectedNote","setElectedNote","handleChangeTitle","e","target","value","handleChangeNote","handleSubmit","finalData","Date","prevState","map","item","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAO,YAAP;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,UAAnC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,WARI;AASJC,IAAAA,cATI;AAUJC,IAAAA,UAVI;AAWJC,IAAAA,cAXI;AAYJC,IAAAA;AAZI,MAaFZ,KAbJ;AAeA,QAAM,CAACa,aAAD,EAAgBC,eAAhB,IAAmCrB,QAAQ,EAAjD;AACA,QAAM,CAACsB,YAAD,EAAeC,cAAf,IAAiCvB,QAAQ,EAA/C;;AAGA,QAAMwB,iBAAiB,GAAIC,CAAD,IAAO;AAC/BhB,IAAAA,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;;AACA,QAAIR,MAAM,KAAG,WAAb,EAA0B;AACtBE,MAAAA,eAAe,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH;AACF,GALD;;AAOA,QAAMC,gBAAgB,GAAIH,CAAD,IAAO;AAC9BZ,IAAAA,YAAY,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;;AACA,QAAIR,MAAM,KAAG,WAAb,EAA0B;AACtBI,MAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH;AACF,GALD;;AAOA,QAAME,YAAY,GAAG,MAAM;AACzB,UAAMC,SAAS,GAAGhB,QAAlB;AACAgB,IAAAA,SAAS,CAAC,aAAD,CAAT,GAA2BzB,MAAM,CAAC,IAAI0B,IAAJ,EAAD,EAAa,kBAAb,CAAjC;;AAEA,QAAIZ,MAAM,KAAK,KAAf,EAAsB;AACpBW,MAAAA,SAAS,CAAC,IAAD,CAAT,GAAkB3B,MAAM,EAAxB;AACD;;AAED,QAAIgB,MAAM,KAAK,MAAf,EAAuB;AACrBW,MAAAA,SAAS,CAAC,IAAD,CAAT,GAAkBhB,QAAQ,CAAC,IAAD,CAA1B;AACD;;AAED,QAAIK,MAAM,KAAK,WAAf,EAA4B;AAAE;AAC1BW,MAAAA,SAAS,CAAC,IAAD,CAAT,GAAkB3B,MAAM,EAAxB;AACA2B,MAAAA,SAAS,CAAC,aAAD,CAAT,GAA2BzB,MAAM,CAAC,IAAI0B,IAAJ,EAAD,EAAa,kBAAb,CAAjC;AACAD,MAAAA,SAAS,CAAC,YAAD,CAAT,GAA0BV,aAA1B;AACAU,MAAAA,SAAS,CAAC,WAAD,CAAT,GAAyBR,YAAzB;AACAJ,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AAEHP,IAAAA,aAAa,CAAEqB,SAAD,IAAe;AAC3B,aAAO,CAACF,SAAD,EAAY,GAAGE,SAAf,CAAP;AACD,KAFY,CAAb;AAGAvB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAI,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GA1BD;;AA4BA,MAAII,MAAM,IAAI,KAAd,EAAqB;AACnB,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BAEE;AACE,QAAA,QAAQ,EAAEK,iBADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,KAAK,EAAEhB;AAJT;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AACE,QAAA,QAAQ,EAAEoB,gBADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,cAHd;AAIE,QAAA,KAAK,EAAEhB;AAJT;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,QAAQ,EAAE,CAACI,cADb;AAEE,QAAA,SAAS,EAAG,iBAAgB,CAACA,cAAe,EAF9C;AAGE,QAAA,OAAO,EAAEa,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD,GA1BD,MA0BO,IAAIV,MAAM,IAAI,WAAd,EAA2B;AAChC,wBACE;AAAA,gBAEIT,UAAU,CAACuB,GAAX,CAAgBC,IAAD,IAAU;AACtB,YAAIA,IAAI,CAACC,EAAL,KAAYlB,UAAhB,EAA4B;AAC/B,8BACF;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAO,cAAA,QAAQ,EAAEO,iBAAjB;AAAoC,cAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAU,cAAA,QAAQ,EAAEI,gBAApB;AAAA,wBAAuCM,IAAI,CAACtB;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AACE,cAAA,QAAQ,EAAE,CAACI,cADb;AAEE,cAAA,SAAS,EAAG,iBAAgB,CAACA,cAAe,EAF9C;AAGE,cAAA,OAAO,EAAEa,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADE;AAYE;AACH,OAfC;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;AACF;;GA/GQvB,I;;KAAAA,I;AAiHT,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport \"../App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { compareAsc, format } from \"date-fns\";\n\nfunction Form(props) {\n  const {\n    titleInput,\n    setTitleInput,\n    notesArray,\n    setNotesArray,\n    noteInput,\n    setNoteInput,\n    formData,\n    setFormData,\n    isFormComplete,\n    idSelected,\n    setModalIsOpen,\n    parent,\n  } = props;\n\n  const [selectedTitle, setElectedTitle] = useState();\n  const [selectedNote, setElectedNote] = useState();\n\n\n  const handleChangeTitle = (e) => {\n    setTitleInput(e.target.value);\n    if (parent===\"ModalList\") {\n        setElectedTitle(e.target.value);\n    }\n  };\n\n  const handleChangeNote = (e) => {\n    setNoteInput(e.target.value);\n    if (parent===\"ModalList\") {\n        setElectedNote(e.target.value);\n    }\n  };\n\n  const handleSubmit = () => {\n    const finalData = formData;\n    finalData[\"createdDate\"] = format(new Date(), \"dd-MM-yyyy HH:mm\");\n\n    if (parent === \"App\") {\n      finalData[\"id\"] = uuidv4();\n    }\n\n    if (parent === \"List\") {\n      finalData[\"id\"] = formData[\"id\"];\n    }\n    \n    if (parent === \"ModalList\") { // I have to loop to \n        finalData[\"id\"] = uuidv4();\n        finalData[\"createdDate\"] = format(new Date(), \"dd-MM-yyyy HH:mm\");\n        finalData[\"titleInput\"] = selectedTitle;\n        finalData[\"noteInput\"] = selectedNote;\n        setModalIsOpen(false);\n      }\n\n    setNotesArray((prevState) => {\n      return [finalData, ...prevState];\n    });\n    setTitleInput(\"\");\n    setNoteInput(\"\");\n    setFormData({});\n  };\n\n  if (parent == \"App\") {\n    return (\n      <div className=\"form-wrapper\">\n        {/* Form */}\n        <input\n          onChange={handleChangeTitle}\n          type=\"text\"\n          placeholder=\"Title\"\n          value={titleInput}\n        />\n        <textarea\n          onChange={handleChangeNote}\n          type=\"text\"\n          placeholder=\"Your note...\"\n          value={noteInput}\n        />\n\n        <button\n          disabled={!isFormComplete}\n          className={`submit-button-${!isFormComplete}`}\n          onClick={handleSubmit}\n        >\n          Add\n        </button>\n      </div>\n    );\n  } else if (parent == \"ModalList\") {\n    return (\n      <div>\n        {/* Form */}\n         {notesArray.map((item) => {\n             if (item.id === idSelected) {\n          return (\n        <div className=\"form-wrapper\">\n          <input onChange={handleChangeTitle} type=\"text\"/>\n          <textarea onChange={handleChangeNote}>{item.noteInput}</textarea>\n          <button\n            disabled={!isFormComplete}\n            className={`submit-button-${!isFormComplete}`}\n            onClick={handleSubmit}\n          >\n            Edit\n          </button>\n        </div>\n         );}\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}