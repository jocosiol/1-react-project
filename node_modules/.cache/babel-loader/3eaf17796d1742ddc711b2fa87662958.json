{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/react-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, React } from \"react\";\nimport Modal from 'react-modal';\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nfunction App() {\n  _s();\n\n  const [titleInput, setTitleInput] = useState();\n  const [noteInput, setNoteInput] = useState();\n  const [formData, setFormData] = useState();\n  const [notesArray, setNotesArray] = useState([]);\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    if (formData && formData[\"noteInput\"]) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n  useEffect(() => {\n    const newFormData = {\n      titleInput: titleInput,\n      noteInput: noteInput\n    };\n    setFormData(newFormData);\n  }, [titleInput, noteInput]);\n  useEffect(() => {\n    if (notesArray) {\n      console.log(notesArray);\n    }\n  }, [notesArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      titleInput: titleInput,\n      setTitleInput: setTitleInput,\n      setNotesArray: setNotesArray,\n      noteInput: noteInput,\n      setNoteInput: setNoteInput,\n      formData: formData,\n      setFormData: setFormData,\n      isFormComplete: isFormComplete,\n      parent: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      notesArray: notesArray,\n      setNotesArray: setNotesArray,\n      setModalIsOpen: setModalIsOpen,\n      modalIsOpen: modalIsOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: notesArray.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"titulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: notesArray[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setModalIsOpen(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ndyiCGJ45A79ktaWk19SIX7teEk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/react-project/src/App.js"],"names":["useEffect","useState","React","Modal","List","Form","setAppElement","App","titleInput","setTitleInput","noteInput","setNoteInput","formData","setFormData","notesArray","setNotesArray","isFormComplete","setIsFormComplete","modalIsOpen","setModalIsOpen","newFormData","console","log","map","item","index"],"mappings":"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","sourcesContent":["import { useEffect, useState, React } from \"react\";\nimport Modal from 'react-modal';\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\n\n\nModal.setAppElement('#root');\n\nfunction App() {\n  const [titleInput, setTitleInput] = useState();\n  const [noteInput, setNoteInput] = useState();\n  const [formData, setFormData] = useState();\n  const [notesArray, setNotesArray] = useState([]);\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (\n      formData &&\n      formData[\"noteInput\"]\n    ) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    const newFormData = {\n      titleInput: titleInput,\n      noteInput: noteInput,\n    };\n\n    setFormData(newFormData);\n  }, [titleInput, noteInput]);\n\n  useEffect(() => {\n    if (notesArray) {\n      console.log(notesArray);\n    }\n  }, [notesArray]);\n  return (\n    <div className=\"App\">\n      <Form\n        titleInput={titleInput}\n        setTitleInput={setTitleInput}\n        setNotesArray={setNotesArray}\n        noteInput={noteInput}\n        setNoteInput={setNoteInput}\n        formData={formData}\n        setFormData={setFormData}\n        isFormComplete={isFormComplete}\n        parent=\"App\"\n      />\n      <List notesArray={notesArray} setNotesArray={setNotesArray} setModalIsOpen={setModalIsOpen} modalIsOpen={modalIsOpen} />\n      {/* <button onClick={() => setModalIsOpen(true)}>Open Modal</button> */}\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n      {notesArray.map((item, index) => {\n        return (\n        <div>\n        <h2>titulo</h2>\n        <p>{notesArray[0]}</p>\n        <div>\n          <button onClick={() => setModalIsOpen(false)}>Close</button>\n        </div>\n        </div>);\n        })}\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}