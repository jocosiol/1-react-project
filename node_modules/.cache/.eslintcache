[{"/Users/javiercosio/Documents/ITC/react-project/src/index.js":"1","/Users/javiercosio/Documents/ITC/react-project/src/App.js":"2","/Users/javiercosio/Documents/ITC/react-project/src/reportWebVitals.js":"3","/Users/javiercosio/Documents/ITC/react-project/src/components/Form.js":"4","/Users/javiercosio/Documents/ITC/react-project/src/components/List.js":"5"},{"size":500,"mtime":1635344650294,"results":"6","hashOfConfig":"7"},{"size":2908,"mtime":1635432075599,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1635344650295,"results":"9","hashOfConfig":"7"},{"size":4197,"mtime":1635672592251,"results":"10","hashOfConfig":"7"},{"size":1756,"mtime":1635668927857,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"yghvpv",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/javiercosio/Documents/ITC/react-project/src/index.js",[],["24","25"],"/Users/javiercosio/Documents/ITC/react-project/src/App.js",["26"],"import { useEffect, useState, React } from \"react\";\nimport Modal from \"react-modal\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\n\nModal.setAppElement(\"#root\");\n\nfunction App() {\n  const [titleInput, setTitleInput] = useState();\n  const [noteInput, setNoteInput] = useState();\n  const [formData, setFormData] = useState();\n  const [notesArray, setNotesArray] = useState([]);\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [idSelected, setIdSelected] = useState();\n\n  useEffect(() => {\n    if (formData && formData[\"noteInput\"]) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    const newFormData = {\n      titleInput: titleInput,\n      noteInput: noteInput,\n    };\n\n    setFormData(newFormData);\n  }, [titleInput, noteInput]);\n\n  useEffect(() => {\n    console.log(idSelected);\n  }, [idSelected]);\n\n  useEffect(() => {\n    if (notesArray) {\n      console.log(notesArray);\n    }\n  }, [notesArray]);\n  return (\n    <div className=\"App\">\n      <Form\n        titleInput={titleInput}\n        setTitleInput={setTitleInput}\n        setNotesArray={setNotesArray}\n        noteInput={noteInput}\n        setNoteInput={setNoteInput}\n        formData={formData}\n        setFormData={setFormData}\n        isFormComplete={isFormComplete}\n        setModalIsOpen={setModalIsOpen}\n        parent=\"App\"\n      />\n      <List\n        notesArray={notesArray}\n        setNotesArray={setNotesArray}\n        setModalIsOpen={setModalIsOpen}\n        modalIsOpen={modalIsOpen}\n        idSelected={idSelected}\n        setIdSelected={setIdSelected}\n      />\n      {/* <button onClick={() => setModalIsOpen(true)}>Open Modal</button> */}\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n        {notesArray.map((item, index) => {\n          if (item.id === idSelected) {\n            return (\n              <div>\n                <Form\n                  titleInput={titleInput}\n                  setTitleInput={setTitleInput}\n                  notesArray={notesArray}\n                  setNotesArray={setNotesArray}\n                  noteInput={noteInput}\n                  setNoteInput={setNoteInput}\n                  formData={formData}\n                  setFormData={setFormData}\n                  isFormComplete={isFormComplete}\n                  idSelected={idSelected}\n                  setModalIsOpen={setModalIsOpen}\n                  parent=\"ModalList\"\n                />\n                <h2>{item.titleInput}</h2>\n                <p>{item.noteInput}</p>\n                <div>\n                  <button onClick={() => setModalIsOpen(false)}>Close</button>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/javiercosio/Documents/ITC/react-project/src/reportWebVitals.js",[],"/Users/javiercosio/Documents/ITC/react-project/src/components/Form.js",["27","28","29","30","31","32","33"],"/Users/javiercosio/Documents/ITC/react-project/src/components/List.js",["34","35","36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":68,"column":39,"nodeType":"44","messageId":"45","endLine":68,"endColumn":41},{"ruleId":"46","severity":1,"message":"47","line":5,"column":10,"nodeType":"48","messageId":"49","endLine":5,"endColumn":20},{"ruleId":"46","severity":1,"message":"50","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":10},{"ruleId":"46","severity":1,"message":"51","line":7,"column":10,"nodeType":"48","messageId":"49","endLine":7,"endColumn":13},{"ruleId":"46","severity":1,"message":"52","line":27,"column":10,"nodeType":"48","messageId":"49","endLine":27,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":108,"column":14,"nodeType":"55","messageId":"56","endLine":108,"endColumn":16},{"ruleId":"53","severity":1,"message":"54","line":134,"column":21,"nodeType":"55","messageId":"56","endLine":134,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":138,"column":32,"nodeType":"44","messageId":"45","endLine":138,"endColumn":34},{"ruleId":"46","severity":1,"message":"57","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":13},{"ruleId":"46","severity":1,"message":"58","line":11,"column":5,"nodeType":"48","messageId":"49","endLine":11,"endColumn":16},{"ruleId":"46","severity":1,"message":"59","line":12,"column":5,"nodeType":"48","messageId":"49","endLine":12,"endColumn":15},{"ruleId":"46","severity":1,"message":"60","line":28,"column":9,"nodeType":"48","messageId":"49","endLine":28,"endColumn":19},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'compareAsc' is defined but never used.","Identifier","unusedVar","'id' is defined but never used.","'set' is defined but never used.","'isEditing' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Modal' is defined but never used.","'modalIsOpen' is assigned a value but never used.","'idSelected' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]